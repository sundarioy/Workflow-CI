name: MLflow Project CI - Stroke Prediction

# Trigger events
on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # Manual trigger
    inputs:
      experiment_name:
        description: 'MLflow experiment name'
        required: false
        default: 'stroke_prediction_ci'
      verbose:
        description: 'Enable verbose logging'
        required: false
        default: false
        type: boolean

# Environment variables
env:
  PYTHON_VERSION: '3.9'
  MLFLOW_TRACKING_URI: 'file:./mlruns'

jobs:
  # Job 1: Basic validation
  validate:
    runs-on: ubuntu-latest
    name: Validate MLProject Structure
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        
    - name: Install MLflow
      run: |
        python -m pip install --upgrade pip
        pip install mlflow>=2.0.0
        
    - name: Validate MLProject structure
      run: |
        echo "🔍 Validating MLProject structure..."
        ls -la MLProject/
        echo "📋 Checking required files:"
        test -f MLProject/MLProject && echo "✅ MLProject file exists" || exit 1
        test -f MLProject/conda.yaml && echo "✅ conda.yaml exists" || exit 1
        test -f MLProject/modelling.py && echo "✅ modelling.py exists" || exit 1
        test -d MLProject/stroke_data_preprocessing && echo "✅ Data directory exists" || exit 1
        echo "🎯 MLProject structure validation passed!"

  # Job 2: Train models using MLflow Project
  train:
    runs-on: ubuntu-latest
    name: Train ML Models
    needs: validate
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential
        
    - name: Install MLflow and dependencies
      run: |
        python -m pip install --upgrade pip
        pip install mlflow>=2.0.0
        pip install conda
        
    - name: Setup MLflow tracking
      run: |
        echo "🎯 Setting up MLflow tracking..."
        mkdir -p mlruns
        export MLFLOW_TRACKING_URI=file:./mlruns
        echo "MLFLOW_TRACKING_URI=file:./mlruns" >> $GITHUB_ENV
        
    - name: Run MLflow Project
      run: |
        echo "🚀 Starting MLflow Project execution..."
        cd MLProject
        
        # Set experiment name based on trigger
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          EXPERIMENT_NAME="${{ github.event.inputs.experiment_name }}"
          VERBOSE_FLAG=""
          if [ "${{ github.event.inputs.verbose }}" = "true" ]; then
            VERBOSE_FLAG="--verbose"
          fi
        else
          EXPERIMENT_NAME="stroke_prediction_ci_auto"
          VERBOSE_FLAG=""
        fi
        
        echo "📊 Training with experiment: $EXPERIMENT_NAME"
        
        # Run the MLflow project
        mlflow run . \
          --experiment-name "$EXPERIMENT_NAME" \
          --env-manager conda \
          -P experiment_name="$EXPERIMENT_NAME" \
          -P data_path="stroke_data_preprocessing" \
          $VERBOSE_FLAG
          
    - name: Verify training results
      run: |
        echo "📋 Checking training results..."
        ls -la mlruns/
        echo "🔍 MLflow runs created:"
        find mlruns/ -name "*.yaml" | head -5
        echo "✅ Training completed successfully!"
        
    - name: Generate training summary
      run: |
        echo "📊 Training Summary" > training_summary.txt
        echo "==================" >> training_summary.txt
        echo "Trigger: ${{ github.event_name }}" >> training_summary.txt
        echo "Branch: ${{ github.ref_name }}" >> training_summary.txt
        echo "Commit: ${{ github.sha }}" >> training_summary.txt
        echo "Timestamp: $(date)" >> training_summary.txt
        echo "MLflow runs location: ./mlruns" >> training_summary.txt
        
    - name: Upload training artifacts
      uses: actions/upload-artifact@v4
      with:
        name: mlflow-training-results
        path: |
          mlruns/
          training_summary.txt
        retention-days: 30
        if-no-files-found: warn

  # Job 3: Training summary and notification
  summary:
    runs-on: ubuntu-latest
    name: Training Summary
    needs: [validate, train]
    if: always()
    
    steps:
    - name: Training Status Summary
      run: |
        echo "🎯 MLflow Project CI Summary"
        echo "=========================="
        echo "Validation Status: ${{ needs.validate.result }}"
        echo "Training Status: ${{ needs.train.result }}"
        
        if [ "${{ needs.validate.result }}" = "success" ] && [ "${{ needs.train.result }}" = "success" ]; then
          echo "✅ All jobs completed successfully!"
          echo "🎉 Models trained and artifacts available for download"
        else
          echo "❌ Some jobs failed. Check the logs above."
          exit 1
        fi